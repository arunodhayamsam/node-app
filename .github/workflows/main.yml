# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "main" ]  

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
env:  
  REPOSITORY: node-app 
  IMAGE_TAG: $(echo ${{ github.sha }} | head -c 8)
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Configure aws creds
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1  

      - name: Build docker image
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry}}
        run: docker build -t ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ env.IMAGE_TAG }} . 

      - name: Trivy vulnerability
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry}}
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ env.IMAGE_TAG }}

      - name: Push the Docker Image
        env: 
          REGISTRY: ${{ steps.login-ecr.outputs.registry}}
        run: docker push ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ env.IMAGE_TAG }}      
#      - name: Build docker Image 
#        run: |
#          docker build -t node-app:${{ github.sha }} .
#          docker push $REGISTRY/$REPOSITORY:${{ env.IMAGE_TAG }}
#
#      - name: Run Trivy vulnerability scanner
#        uses: aquasecurity/trivy-action@master
#        with:
#          image-ref: 'node-app:${{ github.sha }}' 
#      
#      - name: Build docker Image Push 
#        env:
#          ACCOUNT_ID: ${{ secrets.ACCOUNT_ID }}
#          REGION: ${{ secrets.REGION }}
#          IMAGE_TAG: $(echo ${{ github.sha }} | head -c 8)
#        run: |
#          docker tag node-app:${{ github.sha }} $ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/node-app:${{ env.IMAGE_TAG }}      
#          docker push $ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/node-app:${{ env.IMAGE_TAG }}
#
#      - name: Configure the deployment file
#        run: |
#          DOCKER=node-app:${{ github.sha }}
#          sed -i 's@CONTAINER_IMAGE@'"$DOCKER"'@' deployment.yml
#      
#      - name: Deploy the application     
#        uses: tale/kubectl-action@v1
#        with:
#          base64-kube-config: ${{ secrets.KUBE_CONFIG }}
#      - run: |
#          kubectl get node    
#          kubectl apply -f deployment.yml
#   