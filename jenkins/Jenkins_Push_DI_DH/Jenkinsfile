timestamps {

  node('my-host') {
    withEnv(['node=test']) {
  // Start Stages
    stage('Clone') {
      checkout([$class: 'GitSCM',
                  branches: [[name: 'feature-tick_012']],
                  doGenerateSubmoduleConfigurations: false,
                  extensions: [],
                  submoduleCfg: [],
                  userRemoteConfigs: [[credentialsId: 'github', url: 'https://git-codecommit.us-east-2.amazonaws.com/v1/repos/Ticket_Mgt_Backend']]
                ])    
    }  
    stage('Dockebuild and Push') {    
         sh 'rm -f ~/.dockercfg ~/.docker/config.json || true'
         docker.withRegistry('939600059814.dkr.ecr.us-east-1.amazonaws.com/node-app', 'ecr:us-east-1:new-ecr') {
         def customImage = docker.build("node-app:${env.BUILD_ID}")
         customImage.push()
          
      }
    }
    
    stage('Update ECS Service') {
           echo $node
           sh '''#!/bin/bash
            sed -i "s/IMG_TAG/${BUILD_NUMBER}/g" task-definition.json
            cat task-definition.json
            '''
         //def role_arn = sh (aws ecs describe-task-definition --task-definition "${TASK_DEFINITION_NAME}" --region "${AWS_DEFAULT_REGION}" | jq .taskDefinition.executionRoleArn)
     }
   }  
 }
}

